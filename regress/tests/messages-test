#!/bin/sh
#
# Run a simple backup
#   then restore it.
# We have bad configuration for Messages resources, everything
# should work
#
TestName="messages-test"
JobName=backup
. scripts/functions

scripts/cleanup
scripts/copy-confs
change_jobname BackupClient1FileList $JobName

#
# Zap out any schedule in default conf file so that
#  it doesn't start during our test
#
outf="$tmp/sed_tmp"
echo "s%  Schedule =%# Schedule =%g" >$outf

# tweak all Messages {} with non valid path
echo 's%append = "%append = "/nowhere%g' >> $outf
echo "s%bsmtp -h $SMTP_HOST%bsmtp -h nonvalidhost%g" >> $outf
echo 's%# mail%  mail%' >> $outf
echo 's%Bareos daemon message%DELETE THIS MESSAGE Bareos daemon message%' >> $outf
echo 's%Bareos:%DELETE THIS MESSAGE Bareos:%' >> $outf
#echo 's%mailcommand = "%mailcommand = "/nowhere%g' >> $outf

cp ${conf}/bareos-dir.conf $tmp/1
sed -f ${outf} $tmp/1 >${conf}/bareos-dir.conf

# Directory to backup.
# This directory will be created by setup_data().
BackupDirectory="${tmp}/data"

# Use a tgz to setup data to be backuped.
# Data will be placed at "${tmp}/data/".
setup_data data/small.tgz

# the default fileset FS_TESTJOB backups all file and directories defined in "${tmp}/file-list".
echo "${BackupDirectory}" >${tmp}/file-list


start_test

cat <<END_OF_DATA >$tmp/bconcmds
@$out /dev/null
messages
@$out $tmp/log1.out
@#setdebug level=100 storage=File
label volume=TestVolume001 storage=File pool=Full
run job=$JobName yes
@sleep 1
status storage=File
wait
messages
@#
@# now do a restore
@#
@$out $tmp/log2.out
restore where=$tmp/bareos-restores select all done
yes
wait
messages
quit
END_OF_DATA

run_bareos
check_for_zombie_jobs storage=File
stop_bareos

check_two_logs
check_restore_diff
end_test
