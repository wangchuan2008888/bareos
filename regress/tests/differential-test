#!/bin/sh
#
# Run a simple backup then create some
#   new files, do a differential and restore those two files.
#
TestName="differential-test"
JobName=differential
. scripts/functions

scripts/cleanup
scripts/copy-test-confs
change_jobname CompressedTest $JobName

# Directory to backup.
# This directory will be created by setup_data().
BackupDirectory="${tmp}/data"

# Use a tgz to setup data to be backuped.
# Data will be placed at "${tmp}/data/".
setup_data data/flat-c.tgz

# the default fileset FS_TESTJOB backups all file and directories defined in "${tmp}/file-list".
echo "${BackupDirectory}" >${tmp}/file-list

echo "${BackupDirectory}/ficheriro1.txt" >${tmp}/restore-list
echo "${BackupDirectory}/ficheriro2.txt" >>${tmp}/restore-list


start_test

cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@$out ${cwd}/tmp/log1.out
setdebug level=100 storage=File
label storage=File volume=TestVolume002
label storage=File volume=TestVolume001
run job=$JobName yes
wait
messages
quit
END_OF_DATA

run_bareos

scripts/check_for_zombie_jobs storage=File
echo "ficheriro1.txt" >${BackupDirectory}/ficheriro1.txt
echo "ficheriro2.txt" >${BackupDirectory}/ficheriro2.txt

cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@$out ${cwd}/tmp/log1.out
@# Force differential on the second Volume
update volume=TestVolume002 VolStatus=Used
run level=differential job=$JobName yes
wait
messages
END_OF_DATA

run_bconsole

scripts/check_for_zombie_jobs storage=File
echo "ficheriro2.txt" >${BackupDirectory}/ficheriro2.txt

cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@$out ${cwd}/tmp/log1.out
run level=incremental job=$JobName yes
wait
messages
@#
@# now do a restore
@#
@$out ${cwd}/tmp/log2.out
restore where=${cwd}/tmp/bareos-restores storage=File file=<${cwd}/tmp/restore-list
yes
wait
messages
quit
END_OF_DATA

run_bconsole
scripts/check_for_zombie_jobs storage=File
stop_bareos

check_two_logs
check_restore_files_diff `cat ${tmp}/restore-list`

end_test
