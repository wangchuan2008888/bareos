#!/bin/sh
#
# Run a simple backup
#   to a tape where the maximum tape file size is set to 1M
#   then restore a few files from it.  Note, by setting the maximum
#   file size to 1M, it runs very slow. This tests the
#   seeking capability
#
TestName="restore-seek-tape"
JobName=restore-tape-seek
. scripts/functions

require_tape_drive

scripts/cleanup-tape
scripts/copy-tape-confs
#
# Enable MaximumFileSize to ensure lots of JobMedia records and thus
#  lots of seeking
#
cp ${cwd}/bin/bareos-sd.conf ${cwd}/tmp/1
sed "s%# Maximum File Size = 1000000%  Maximum File Size = 10KB%" ${cwd}/tmp/1 >${cwd}/bin/bareos-sd.conf

change_jobname NightlySave $JobName
# Directory to backup.
# This directory will be created by setup_data().
BackupDirectory="${tmp}/data"

# Copy only the .c files (to be restored)
#  set files to "*.c" for all c files
files="ua_tree.c ua_update.c"
#  files="*.c"
mkdir -p ${BackupDirectory}
for i in ${files}; do
   echo "test" > ${BackupDirectory}/$i
done
#
# restore-list contains the list
#  of files we will restore
#
find "${BackupDirectory}" -type f | sort | uniq >${tmp}/restore-list

# add more data to be backuped.
# Use a tgz to setup data to be backuped.
# Data will be placed at "${tmp}/data/".
setup_data data/small.tgz

# the default fileset FS_TESTJOB backups all file and directories defined in "${tmp}/file-list".
echo "${BackupDirectory}" >${tmp}/file-list


start_test

cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@$out ${cwd}/tmp/log1.out
label storage=tape volume=TestVolume001 pool=Default
run job=$JobName yes
wait
messages
@#
@# now do a restore
@#
@$out ${cwd}/tmp/log2.out
setdebug level=30 fd
setdebug level=10 storage=tape
sql
@# print the JobMedia records
select * from JobMedia;

restore bootstrap=${cwd}/tmp/kern.bsr where=${cwd}/tmp/bareos-restores storage=tape
7
<${cwd}/tmp/restore-list

yes
wait
messages
quit
END_OF_DATA

run_bareos
check_for_zombie_jobs storage=tape
stop_bareos

check_two_logs
check_restore_files_diff `cat ${tmp}/restore-list`
end_test
