#!/bin/sh
#
# Run a simple backup, then create some
#   new files, do an Incremental and restore those two files.
#
# This script uses the virtual disk autochanger and two drives
#
# TODO: add check to verify that 2 drives are used.
#
TestName="2drive-incremental-2disk"
#JobName="2drive2disk"

# Directory to backup.
# This directory will be created by setup_data().
BackupDirectory="${tmp}/data"

. scripts/functions

scripts/cleanup
scripts/copy-2disk-drive-confs
scripts/prepare-disk-changer

#CLIENT=localhost-fd

#change_jobname localhost-fd $JobName
start_test

# Directory to backup.
# This directory will be created by setup_data().
BackupDirectory="${tmp}/data"

# Use a tgz to setup data to be backuped.
# Data will be placed at "${tmp}/data/".
setup_data data/flat-c.tgz

# the default fileset FS_TESTJOB backups all file and directories defined in "${tmp}/file-list".
echo "${BackupDirectory}" >${tmp}/file-list

# Turn off Prefer Mounted Volumes so we use 2 drives
outf="${cwd}/tmp/sed_tmp"
echo "s%# Prefer Mounted Volumes%  Prefer Mounted Volumes%g" >${outf}
cp ${confdir}/bareos-dir.conf ${cwd}/tmp/1
# Comment the next line out to write everything to one drive
#  otherwise, it writes the two jobs to different drives
sed -f ${outf} ${cwd}/tmp/1 >${confdir}/bareos-dir.conf

# Write out bconsole commands
cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@$out ${cwd}/tmp/log1.out
setdebug level=3 dir
setdebug level=3 storage=tape
setdebug level=3 client=2drive2disk
label storage=tape volume=TestVolume001 slot=1 Pool=Default drive=0
label storage=tape volume=TestVolume002 slot=2 Pool=Default drive=1
status storage=tape
setdebug level=200 storage=tape
run job=NightlySave yes
run job=NightlySave yes
run job=NightlySave yes
run job=NightlySave yes
run job=NightlySave yes
wait jobid=2
status storage=tape
list volumes
list jobs
messages
wait
list volumes
list jobs
status storage=tape
messages
quit
END_OF_DATA

run_bareos
echo "ficheriro1.txt" >${BackupDirectory}/ficheriro1.txt
echo "ficheriro2.txt" >${BackupDirectory}/ficheriro2.txt

echo "${BackupDirectory}/ficheriro1.txt" >${tmp}/restore-list
echo "${BackupDirectory}/ficheriro2.txt" >>${tmp}/restore-list

cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@$out ${cwd}/tmp/log1.out
@# Force Incremental on the second Volume
update volume=TestVolume001 VolStatus=Used
status storage=tape
list volumes
@#setdebug level=120 storage=tape
run level=Incremental job=NightlySave yes
wait
list volumes
status storage=tape
messages
@#
@# now do a restore
@#
@$out ${cwd}/tmp/log2.out
restore where=${tmp}/bareos-restores
7
<${tmp}/restore-list

yes
wait
messages
quit
END_OF_DATA

run_bconsole

check_for_zombie_jobs storage=tape

stop_bareos

check_two_logs
# The restore should read from TestVolume002, which was on drive 1
if ! grep TestVolume002 ${tmp}/log2.out >/dev/null 2>&1; then
   rstat=1
fi

check_restore_files_diff `cat ${tmp}/restore-list`

end_test

