#!/bin/sh
#
# Run a backup, but with the
#   Maximum File Size set. Then do a restore of a few files to kick in
#   disk seeking (not yet enabled), and ensure that the restored files
#   match. Even though disk seeking is not yet enabled, this is a good test,
#   and once it is enabled, this will test it.
#
TestName="restore-disk-seek-test"
JobName=restore-disk-seek
. scripts/functions

scripts/cleanup
scripts/copy-test-confs

#
# Enable MaximumFileSize to ensure lots of JobMedia records and thus
#  lots of seeking
#
cp ${cwd}/bin/bareos-sd.conf ${cwd}/tmp/1
sed "s%# Maximum File Size%  Maximum File Size%" ${cwd}/tmp/1 >${cwd}/bin/bareos-sd.conf

change_jobname CompressedTest $JobName

# Directory to backup.
# This directory will be created by setup_data().
BackupDirectory="${tmp}/data"

# Copy only the .c files (to be restored)
#  set files to "*.c" for all c files
files="ua_tree.c ua_update.c"
#  files="*.c"
mkdir -p ${BackupDirectory}
for i in ${files}; do
   echo "test" > ${BackupDirectory}/$i
done
#
# restore-list contains the list
#  of files we will restore
#
find "${BackupDirectory}" -type f | sort | uniq >${tmp}/restore-list

# add more data to be backuped.
# Use a tgz to setup data to be backuped.
# Data will be placed at "${tmp}/data/".
setup_data data/small.tgz

# the default fileset FS_TESTJOB backups all file and directories defined in "${tmp}/file-list".
echo "${BackupDirectory}" >${tmp}/file-list


start_test

cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@$out ${cwd}/tmp/log1.out
label storage=File volume=TestVolume001
run job=$JobName yes
wait
messages
@#
@# now do a restore
@#
@$out ${cwd}/tmp/log2.out
setdebug level=30 fd
setdebug level=11 storage=File
sql
@# print the JobMedia records
select * from JobMedia;

restore bootstrap=${cwd}/tmp/kern.bsr where=${cwd}/tmp/bareos-restores storage=File
7
<${cwd}/tmp/restore-list

yes
wait
messages
quit
END_OF_DATA

run_bareos
check_for_zombie_jobs storage=File
stop_bareos

check_two_logs
check_restore_files_diff `cat ${tmp}/restore-list`
end_test
