#!/bin/sh
#
# Run four jobs at the same time, with four Volumes, but set
#   Maximum Job Volumes = 1 on each of the Volumes.  Note,
#   Volume 2 will probably have two jobs on it.  Something to
#   be fixed in a later version.
#
TestName="maxvol-test"
JobName=maxvol
. scripts/functions

scripts/cleanup
scripts/copy-test-confs

cp -f ${conf}/bareos-dir.conf ${cwd}/tmp/1
sed "s%# Maximum Volume Jobs%  Maximum Volume Jobs%" ${cwd}/tmp/1 >${conf}/bareos-dir.conf


change_jobname NightlySave $JobName


# Directory to backup.
# This directory will be created by setup_data().
BackupDirectory="${tmp}/data"

# Use a tgz to setup data to be backuped.
# Data will be placed at "${tmp}/data/".
setup_data data/small.tgz

# the default fileset FS_TESTJOB backups all file and directories defined in "${tmp}/file-list".
echo "${BackupDirectory}" >${tmp}/file-list


start_test

cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@$out   ${cwd}/tmp/log1.out
label storage=File1 volume=TestVolume001
label storage=File1 volume=TestVolume002
label storage=File1 volume=TestVolume003
label storage=File1 volume=TestVolume004
update Volume=TestVolume001 MaxVolBytes=100000000
@#50000000
@#12
setdebug level=100 Storage=File1
llist volume=TestVolume001
llist volume=TestVolume002
run job=$JobName level=Full Storage=File1 yes
run job=$JobName level=Full Storage=File1 yes
run job=$JobName level=Full Storage=File1 yes
wait
list volumes
llist volume=TestVolume001
llist volume=TestVolume002
messages
@#
@# now do a restore
@#
@$out   ${cwd}/tmp/log2.out
restore where=${cwd}/tmp/bareos-restores select storage=File1
unmark *
mark *
done
yes
wait
@#reload
@#reload
messages
quit
END_OF_DATA

run_bareos
check_for_zombie_jobs storage=File1
stop_bareos

check_two_logs
check_restore_diff
end_test
