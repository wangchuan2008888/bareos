#!/bin/sh
#
# Run a simple backup with encryption and no other options
#    (i.e. no compression and no sparse handling).
#
TestName="data-encrypt-aes256-test"
JobName=Crypto-AES256
. scripts/functions

#
# Make sure this cipher is supported by openssl.
#
openssl --help > /dev/null 2>&1
if test  $? -eq 0; then
   cnt=`openssl --help 2>&1 | grep -c aes-256-cbc`
   if test $cnt -eq 0; then
      echo "$TestName skipped: AES256 cipher not supported"
      exit 0
   fi
fi

scripts/cleanup
scripts/copy-crypto-confs

fdcfg=$conf/bareos-fd.conf
$bperl -e "add_attribute('$fdcfg', 'Compatible', 'No', 'FileDaemon')"
$bperl -e "add_attribute('$fdcfg', 'PKI Cipher', 'aes256', 'FileDaemon')"

change_jobname NightlySave $JobName

# Directory to backup.
# This directory will be created by setup_data().
BackupDirectory="${tmp}/data"

# Use a tgz to setup data to be backuped.
# Data will be placed at "${tmp}/data/".
setup_data data/small.tgz

# the default fileset FS_TESTJOB backups all file and directories defined in "${tmp}/file-list".
echo "${BackupDirectory}" >${tmp}/file-list


start_test

cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@$out ${cwd}/tmp/log1.out
label storage=File volume=TestVolume001
@#setdebug level=10 fd
run job=$JobName yes
wait
messages
@#
@# now do a restore
@#
@$out ${cwd}/tmp/log2.out
@#setdebug level=10 fd
restore where=${cwd}/tmp/bareos-restores storage=File
5
mark *
done
yes
wait
messages
quit
END_OF_DATA

run_bareos
sleep 2
check_for_zombie_jobs storage=File
stop_bareos

du -s ${BackupDirectory}
du -s ${tmp}/bareos-restores/

check_two_logs
check_restore_diff
end_test
