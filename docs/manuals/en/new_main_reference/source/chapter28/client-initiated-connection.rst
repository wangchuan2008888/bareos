.. ATTENTION do not edit this file manually.
   It was automatically converted from the corresponding .tex file

.. _section-ClientInitiatedConnection:

Client Initiated Connection
===========================

The |bareosDir| knows, when it is required to talk to a client (|bareosFd|). Therefore, by defaults, the |bareosDir| connects to the clients.

However, there are setups where this can cause problems, as this means that:

-  The client must be reachable by its configured **Address**:sup:`Dir`:sub:`Client`\ . Address can be the DNS name or the IP address. (For completeness: there are potential workarounds by using the :ref:`setip <bcommandSetIP>` command.)

-  The |bareosDir| must be able to connect to the |bareosFd| over the network.

To circumvent these problems, since Bareos :index:`Version >= 16.2.2 <pair: bareos-16.2.2; Client Initiated Connection>` it is possible to let the |bareosFd| initiate the network connection to the |bareosDir|.

Which address the client connects to reach the |bareosDir| is configured in the **Address**:sup:`Fd`:sub:`Director`\  directive.

To additional allow this connection direction use:

-  **Connection From Client To Director**:sup:`Dir`:sub:`Client`\  = yes

-  **Heartbeat Interval**:sup:`Dir`:sub:`Client`\  = 60 ``#`` to keep the network connection established

-  **Connection From Client To Director**:sup:`Fd`:sub:`Director`\  = yes

To only allow Connection From the Client to the Director use:

-  **Connection From Director To Client**:sup:`Dir`:sub:`Client`\  = no

-  **Connection From Client To Director**:sup:`Dir`:sub:`Client`\  = yes

-  **Heartbeat Interval**:sup:`Dir`:sub:`Client`\  = 60 ``#`` to keep the network connection established

-  **Connection From Director To Client**:sup:`Fd`:sub:`Director`\  = no

-  **Connection From Client To Director**:sup:`Fd`:sub:`Director`\  = yes

Using Client Initiated Connections has disadvantages. Without Client Initiated Connections the |bareosDir| only establishes a network connection when this is required. With Client Initiated Connections, the |bareosFd| connects to the |bareosDir| and the |bareosDir| keeps these connections open. The command :strong:`status dir` will show all waiting connections:

.. code-block:: sh
   :caption: show waiting client connections

   *<input>status dir</input>
   ...
   Client Initiated Connections (waiting for jobs):
   Connect time        Protocol            Authenticated       Name
   ====================================================================================================
   19-Apr-16 21:50     54                  1                   client1.example.com
   ...
   ====

When both connection directions are allowed, the |bareosDir| 

#. checks, if there is a waiting connection from this client.

#. tries to connect to the client (using the usual timeouts).

#. waits for a client connection to appear (using the same timeout as when trying to connect to a client).

If none of this worked, the job fails.

When a waiting connection is used for a job, the |bareosFd| will detect this and creates an additional connection. This is required, to keep the client responsive for additional commands, like :strong:`cancel`.

To get feedback in case the |bareosFd| fails to connect to the |bareosDir|, consider configuring |bareosFd| to log in a local file. This can be archived by adding the line

:strong:`Append = "/var/log/bareos/bareos-fd.log" = all, !skipped, !restored`

to the default message resource **Standard**:sup:`Fd`:sub:`Messages` :

.. code-block:: sh
   :caption: bareos-fd.d/messages/Standard.conf

   Messages {
     Name = Standard
     Director = bareos-dir = all, !skipped, !restored
     Append = "/var/log/bareos/bareos-fd.log" = all, !skipped, !restored
   }
